@model UchetNZP.Web.Models.WipHistoryViewModel
@using UchetNZP.Web.Models
@using System.Collections.Generic
@{
    ViewData["Title"] = "История операций НЗП";
    var types = new[]
    {
        WipHistoryEntryType.Launch,
        WipHistoryEntryType.Receipt,
        WipHistoryEntryType.Transfer
    };
}

@functions {
    private static string GetTypeValue(WipHistoryEntryType type)
    {
        return type switch
        {
            WipHistoryEntryType.Launch => "launch",
            WipHistoryEntryType.Receipt => "receipt",
            WipHistoryEntryType.Transfer => "transfer",
            _ => string.Empty,
        };
    }

    private static string GetTypeBadgeClass(WipHistoryEntryType type)
    {
        return type switch
        {
            WipHistoryEntryType.Launch => "bg-primary",
            WipHistoryEntryType.Receipt => "bg-success",
            WipHistoryEntryType.Transfer => "bg-warning text-dark",
            _ => "bg-secondary",
        };
    }

    private static string GetTypeDisplayName(WipHistoryEntryType type)
    {
        return type switch
        {
            WipHistoryEntryType.Launch => "Запуски",
            WipHistoryEntryType.Receipt => "Приходы",
            WipHistoryEntryType.Transfer => "Передачи",
            _ => "Операции",
        };
    }

    private static bool HasTimeComponent(DateTime value)
    {
        return value.TimeOfDay != TimeSpan.Zero;
    }
}

<div class="page-header mb-4">
    <h1 class="display-5 fw-semibold">История операций НЗП</h1>
    <p class="lead">Анализируйте запуски, приходы и передачи по датам с единым фильтром и подробными деталями.</p>
</div>

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <form method="get" class="row g-3 align-items-end" autocomplete="off">
            <div class="col-sm-6 col-md-3">
                <label class="form-label" for="historyFilterFrom">Период с</label>
                <input id="historyFilterFrom" class="form-control form-control-lg" type="date" name="from" value="@Model.Filter.From.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-sm-6 col-md-3">
                <label class="form-label" for="historyFilterTo">по</label>
                <input id="historyFilterTo" class="form-control form-control-lg" type="date" name="to" value="@Model.Filter.To.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-12 col-md-6 col-lg-4">
                <div class="fw-semibold mb-2">Типы операций</div>
                <div class="d-flex flex-wrap gap-3">
                    @foreach (var type in types)
                    {
                        var value = GetTypeValue(type);
                        var inputId = $"historyFilterType_{value}";
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" role="switch" id="@inputId" name="types" value="@value" @(Model.Filter.IsTypeSelected(type) ? "checked" : string.Empty) />
                            <label class="form-check-label" for="@inputId">@GetTypeDisplayName(type)</label>
                        </div>
                    }
                </div>
                <div class="form-text">Снимите галочки, чтобы исключить отдельные типы из списка.</div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-2">
                <button type="submit" class="btn btn-primary btn-lg w-100">Показать</button>
            </div>
        </form>
    </div>
</div>

@if (Model.HasData)
{
    <div class="row g-3 mb-4">
        <div class="col-md-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="text-muted text-uppercase small fw-semibold mb-1">Количество записей</div>
                    <div class="display-6">@Model.TotalEntries</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="text-muted text-uppercase small fw-semibold mb-1">Суммарное количество, шт</div>
                    <div class="display-6">@Model.TotalQuantity.ToString("0.###")</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="text-muted text-uppercase small fw-semibold mb-1">Выбранный период</div>
                    <div class="fs-4">@Model.Filter.From.ToString("dd.MM.yyyy") — @Model.Filter.To.ToString("dd.MM.yyyy")</div>
                </div>
            </div>
        </div>
    </div>

    @foreach (var group in Model.Groups)
    {
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-light d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-3">
                <div>
                    <div class="h4 mb-1">@group.Date.ToString("dd.MM.yyyy")</div>
                    <div class="text-muted small">Записей: @group.EntryCount • Количество: @group.TotalQuantity.ToString("0.###") шт</div>
                </div>
                <div class="d-flex flex-wrap gap-2">
                    @foreach (var summary in group.Summaries)
                    {
                        <span class="badge bg-secondary-subtle text-dark border">@summary.TypeDisplayName: @summary.Count (@summary.Quantity.ToString("0.###"))</span>
                    }
                </div>
            </div>
            <div class="list-group list-group-flush">
                @foreach (var entry in group.Entries)
                {
                    <div class="list-group-item py-3">
                        <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-start gap-3">
                            <div class="flex-grow-1">
                                <div class="d-flex flex-wrap align-items-center gap-2 mb-2">
                                    <span class="badge @GetTypeBadgeClass(entry.Type)">@entry.TypeDisplayName</span>
                                    @if (!string.IsNullOrWhiteSpace(entry.OperationRange))
                                    {
                                        <span class="badge bg-light text-dark border">@entry.OperationRange</span>
                                    }
                                </div>
                                <div class="fw-semibold fs-5">@entry.PartDisplayName</div>
                                @if (HasTimeComponent(entry.OccurredAt))
                                {
                                    <div class="text-muted small">@entry.OccurredAt.ToString("HH:mm")</div>
                                }
                                <div class="d-flex flex-wrap gap-2 mt-2">
                                    @if (!string.IsNullOrWhiteSpace(entry.SectionName))
                                    {
                                        <span class="badge bg-light text-dark border">От: @entry.SectionName</span>
                                    }
                                    @if (entry.HasTargetSection)
                                    {
                                        <span class="badge bg-light text-dark border">В: @entry.TargetSectionName</span>
                                    }
                                </div>
                                @if (entry.HasComment)
                                {
                                    <div class="mt-2">
                                        <span class="fw-semibold">Комментарий:</span>
                                        <span>@entry.Comment</span>
                                    </div>
                                }
                                @if (entry.HasScrap && entry.Scrap is not null)
                                {
                                    <div class="alert alert-warning mt-3 mb-0" role="alert">
                                        <div class="fw-semibold">@entry.Scrap.Type — @entry.Scrap.Quantity.ToString("0.###") шт</div>
                                        @if (entry.Scrap.HasComment)
                                        {
                                            <div class="small text-muted">@entry.Scrap.Comment</div>
                                        }
                                    </div>
                                }
                                @if (entry.HasOperations)
                                {
                                    <details class="mt-3">
                                        <summary class="small text-muted">Детали операций</summary>
                                        <ul class="small mt-2 mb-0">
                                            @foreach (var operation in entry.Operations)
                                            {
                                                var parts = new List<string>();
                                                parts.Add($"№ {operation.OpNumber}");
                                                if (!string.IsNullOrWhiteSpace(operation.OperationName))
                                                {
                                                    parts.Add(operation.OperationName);
                                                }
                                                if (!string.IsNullOrWhiteSpace(operation.SectionName))
                                                {
                                                    parts.Add($"Вид работ: {operation.SectionName}");
                                                }
                                                if (operation.HasNormHours)
                                                {
                                                    parts.Add($"Норматив: {operation.NormHours!.Value.ToString("0.###")}");
                                                }
                                                if (operation.HasHours)
                                                {
                                                    parts.Add($"Часы: {operation.Hours!.Value.ToString("0.###")}");
                                                }
                                                if (operation.HasQuantityChange)
                                                {
                                                    parts.Add($"Δ количество: {operation.QuantityChange!.Value.ToString("0.###")}");
                                                }
                                                <li>@string.Join(" • ", parts)</li>
                                            }
                                        </ul>
                                    </details>
                                }
                            </div>
                            <div class="text-md-end">
                                <div class="fw-semibold fs-4">@entry.Quantity.ToString("0.###") шт</div>
                                @if (entry.HasHours)
                                {
                                    <div class="text-muted">Часы: @entry.Hours!.Value.ToString("0.###")</div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
}
else
{
    <div class="alert alert-light border shadow-sm">
        <div class="fw-semibold mb-1">За выбранный период данные отсутствуют.</div>
        <p class="mb-0">Попробуйте расширить диапазон дат или изменить типы операций.</p>
    </div>
}

<div class="d-flex justify-content-end mt-4">
    <a class="btn btn-link" asp-controller="Home" asp-action="Index">← На главную</a>
</div>
